{"version":3,"sources":["components/imageViewer/constants.js","components/imageViewer/imageViewer.js","components/imageViewer/ImageModal.js"],"names":["Object","defineProperty","exports","value","ZOOM_LEVEL","MIN","MAX","VISIBLE_INDICATORS_COUNT","KEY_CODE","LEFT","RIGTH","OFFSET_DEFAULT","x","y","constants_1","require","ImageWrapper","props","context","state","loading","onload","zoom","rotate","offset","draggable","offsetRange","clientOffset","undefined","src","this","setState","Image","onerror","dx","image","scrollWidth","imageOuter","clientWidth","dy","scrollHeight","clientHeight","Math","max","min","setOffsetRange","rotation","resetOffset","e","clientX","clientY","mounted","abs","nextProps","loadImage","window","addEventListener","bind","document","documentElement","onMoveEnd","removeEventListener","index","showIndex","imageCls","caption","className","title","content","style","transform","ref","component","alt","onDragStart","preventDefault","onMouseMove","onMove","onMouseDown","onMoveStart","onMouseUp","onClick","zoomOut","zoomIn","Component","ImageViewer","activeIndex","list","ret","round","length","map","item","isActive","itemInvisible","itemCls","showPreview","console","log","axios","defaults","baseURL","key","itemControl","backgroundImage","images","stopPropagation","which","keyCode","onPrev","onNext","onKeyDown","prefixCls","indicatorVisible","container","renderIndicators","defaultProps","ImageModal","visible","close"],"mappings":"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","file":"static/js/0.de4963d8.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Image allowed zoom level. Adding Stylesheet when(ZOOM_LEVEL.MAX > 4).\n * eg - :\n *  set ZOOM_LEVEL.MAX = 6\n *  .zoom-5 { transform: scale(3.5) }\n *  .zoom-6 { transform: scale(4) }\n */\nexports.ZOOM_LEVEL = {\n    MIN: 0,\n    MAX: 4\n};\n/** The max count of visible bottom indicators when image length is big enough */\nexports.VISIBLE_INDICATORS_COUNT = 8;\n/**  */\nexports.KEY_CODE = {\n    LEFT: 37,\n    RIGTH: 39\n};\n/** */\nexports.OFFSET_DEFAULT = {\n    x: 0,\n    y: 0\n};\n","import PropTypes from 'prop-types';\nimport './style.css';\nimport React, {Component} from 'react';\nimport axios from \"axios\";\n\nconst constants_1 = require(\"./constants\");\n\n\nclass ImageWrapper extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            loading: false,\n            onload: false,\n            zoom: 0,\n            rotate: 0,\n            offset: constants_1.OFFSET_DEFAULT\n        };\n        this.draggable = false;\n        this.offsetRange = constants_1.OFFSET_DEFAULT;\n        this.clientOffset = {\n            x: undefined,\n            y: undefined\n        };\n    }\n\n    loadImage(src) {\n        this.state.loading = true;\n        this.setState(this.state);\n        this.src = new Image();\n        this.src.src = src;\n        this.src.onload = () => {\n            if (!this.src)\n                return;\n            this.state.loading = false;\n            this.state.onload = true;\n            this.setState(this.state);\n        };\n        this.src.onerror = () => {\n            if (!this.src)\n                return;\n            this.state.loading = false;\n            this.state.onload = false;\n            this.setState(this.state);\n        };\n    }\n\n    resetOffset() {\n        this.state.offset = constants_1.OFFSET_DEFAULT;\n        this.setState(this.state);\n    }\n\n    setOffsetRange() {\n        const zoom = this.state.zoom;\n        const dx = this.image?.scrollWidth * (1 + zoom / 2) - this.imageOuter?.clientWidth;\n        const dy = this.image?.scrollHeight * (1 + zoom / 2) - this.imageOuter?.clientHeight;\n        this.offsetRange = {\n            x: Math.max(0, dx / 2),\n            y: Math.max(0, dy / 2)\n        };\n    }\n\n    zoomIn() {\n        if (!this.state.onload)\n            return;\n        this.state.zoom = Math.min(this.state.zoom + 1, constants_1.ZOOM_LEVEL.MAX);\n        this.setState(this.state);\n        this.setOffsetRange();\n    }\n\n    rotate() {\n        if (!this.state.onload)\n            return;\n        var rotation = this.state.rotate;\n        this.state.rotate = rotation + 90;\n        this.setState(this.state);\n        this.setOffsetRange();\n    }\n\n    zoomOut() {\n        if (!this.state.onload)\n            return;\n        this.state.zoom = Math.max(0, this.state.zoom - 1);\n        this.setState(this.state);\n        this.resetOffset();\n        this.setOffsetRange();\n    }\n\n    onMoveStart(e) {\n        if (!this.offsetRange.x && !this.offsetRange.y) {\n            return;\n        }\n        this.clientOffset = {\n            x: e.clientX,\n            y: e.clientY\n        };\n        this.draggable = true;\n    }\n\n    onMove(e) {\n        if (!e.clientX && !e.clientY || !this.draggable) {\n            return;\n        }\n        const offset = {\n            x: e.clientX - this.clientOffset.x,\n            y: e.clientY - this.clientOffset.y,\n        };\n        this.clientOffset = {\n            x: e.clientX,\n            y: e.clientY\n        };\n        this.state.offset = {\n            x: this.state.offset.x + offset.x,\n            y: this.state.offset.y + offset.y,\n        };\n        this.setState(this.state);\n    }\n\n    onMoveEnd(e) {\n        if (!this.mounted)\n            return;\n        this.draggable = false;\n        const offset = {\n            x: Math.abs(this.state.offset.x),\n            y: Math.abs(this.state.offset.y)\n        };\n        if (Math.abs(this.state.offset.x) >= this.offsetRange.x) {\n            this.state.offset.x = this.state.offset.x < 0 ? Math.min(0, -(this.offsetRange.x)) : Math.max(0, this.offsetRange.x);\n            this.setState(this.state);\n        }\n        if (Math.abs(this.state.offset.y) >= this.offsetRange.y) {\n            this.state.offset.y = this.state.offset.y < 0 ? Math.min(0, -(this.offsetRange.y)) : Math.max(0, this.offsetRange.y);\n            this.setState(this.state);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.image.src != nextProps.image.src && this.props.image != null) {\n            this.resetOffset();\n            this.loadImage(nextProps.image.src);\n            this.setState({\n                zoom: 0\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.loadImage(this.props.image.src);\n        window.addEventListener('resize', this.setOffsetRange.bind(this));\n        document.documentElement.addEventListener(\"mouseup\", this.onMoveEnd.bind(this));\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        if (!!this.src) {\n            this.src = undefined;\n        }\n        window.removeEventListener('resize', this.setOffsetRange.bind(this));\n        document.documentElement.removeEventListener(\"mouseup\", this.onMoveEnd.bind(this));\n    }\n\n    render() {\n        const {image, index, showIndex} = this.props;\n        const {offset, zoom, loading, rotate} = this.state;\n        // const value = `translate3d(${offset.x}px, ${offset.y}px, 0px)`;\n        const value = `rotate(${rotate}deg)`;\n        const imageCls = `zoom-${zoom} image-outer ${this.draggable ? 'dragging' : ''}`;\n        const caption = (<p className=\"caption\">\n                {image.title ? <span className=\"title\">{image.title}</span> : null}\n                {image.title && image.content ? <span>{` - `}</span> : null}\n                {image.title ? <span className=\"content\">{image.content}</span> : null}\n            </p>\n        );\n\n        return (<div className=\"image-wrapper\">\n            <div\n                style={{transform: value}}\n                ref={(component) => this.imageOuter = component}\n                className={imageCls}>\n                {loading ? (\n                    <div className=\"spinner\">\n                        <div className=\"bounce\"></div>\n                    </div>\n                ) : <img\n                    className=\"image\"\n                    ref={(component) => this.image = component}\n                    src={image.src}\n                    alt={image.title || ''}\n                    draggable={false}\n                    onDragStart={(e) => e.preventDefault()}\n                    onMouseMove={this.onMove.bind(this)}\n                    onMouseDown={this.onMoveStart.bind(this)}\n                    onMouseUp={this.onMoveEnd.bind(this)}/>}\n            </div>\n            <div className=\"tool-bar\">\n                {showIndex && <div className=\"index-indicator\">{index}</div>}\n                {caption}\n                <div className=\"button-group\">\n                    <div className=\"zoom-out button\"\n                         onClick={this.zoomOut.bind(this)}>\n                    </div>\n                    <div className=\"zoom-in button\"\n                         onClick={this.zoomIn.bind(this)}>\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n    }\n}\n\nclass ImageViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeIndex: this.props.activeIndex,\n        };\n    }\n\n    renderIndicators(list) {\n        const activeIndex = this.state.activeIndex;\n        const ret = Math.round(constants_1.VISIBLE_INDICATORS_COUNT / 2);\n        const length = list.length;\n        return list.map((item, index) => {\n            const isActive = activeIndex === index;\n            const itemInvisible = length > constants_1.VISIBLE_INDICATORS_COUNT && (index < Math.min(length - constants_1.VISIBLE_INDICATORS_COUNT - 1, activeIndex - ret) || index > Math.max(activeIndex + ret, constants_1.VISIBLE_INDICATORS_COUNT));\n            const itemCls = `indicators-item ${isActive ? 'active' : ''} ${itemInvisible ? 'invisible' : ''} ${this.props.showPreview ? 'preview' : ''}`;\n            console.log(`${axios.defaults.baseURL}/${item.src}`);\n            return (\n                <div\n                    key={index}\n                    className={itemCls}\n                    onClick={this.itemControl.bind(this, index)}>\n                    {this.props.showPreview && (\n                        <div className=\"image\"\n                             style={{backgroundImage: `url(${axios.defaults.baseURL}/${item.src})`}}></div>\n                    )}\n                </div>\n            );\n        });\n    }\n\n    onPrev() {\n        let index = (this.state.activeIndex + this.props.images.length - 1) % this.props.images.length;\n        this.itemControl(index);\n    }\n\n    onNext() {\n        let index = (this.state.activeIndex + 1) % this.props.images.length;\n        this.itemControl(index);\n    }\n\n    itemControl(index) {\n        if (index === this.state.activeIndex)\n            return;\n        this.state.activeIndex = index;\n        this.setState(this.state);\n    }\n\n    onKeyDown(e) {\n        if (!this.mounted)\n            return;\n        e.stopPropagation();\n        switch (e.which || e.keyCode) {\n            case constants_1.KEY_CODE.LEFT:\n                this.onPrev();\n                break;\n            case constants_1.KEY_CODE.RIGTH:\n                this.onNext();\n                break;\n        }\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        document.documentElement.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        document.documentElement.removeEventListener(\"keydown\", this.onKeyDown.bind(this));\n    }\n\n    render() {\n        const {images, showIndex, prefixCls} = this.props;\n        const {activeIndex} = this.state;\n        const indicatorVisible = images.length > 1;\n        return (\n            <div className={`react-image-viewer ${prefixCls}-image-viewer`}\n                 ref={(component) => this.container = component}>\n                <ImageWrapper\n                    showIndex={showIndex}\n                    index={`${activeIndex + 1}/${images.length}`}\n                    image={images[activeIndex]}/>\n                {indicatorVisible ?\n                    <div className=\"direction-control-button\">\n                        <div className=\"prev-button button\"\n                             onClick={this.onPrev.bind(this)}>\n                            <div className=\"bar\"></div>\n                        </div>\n                        <div className=\"next-button button\"\n                             onClick={this.onNext.bind(this)}>\n                            <div className=\"bar\"></div>\n                        </div>\n                        <div className=\"indicators\">\n                            {indicatorVisible && this.renderIndicators(images)}\n                        </div>\n                    </div>\n                    : null}\n            </div>\n        )\n    }\n}\n\nImageViewer.defaultProps = {\n    prefixCls: 'react-image-viewer',\n    className: 'reactInsurance-image-viewer',\n    showIndex: true,\n    showPreview: true,\n    activeIndex: 0,\n};\nImageViewer.propTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    showIndex: PropTypes.bool,\n    showPreview: PropTypes.bool,\n    activeIndex: PropTypes.number,\n};\nexport default ImageViewer;\n","import ImageViewer from \"./imageViewer\";\nimport React, {Component} from \"react\";\nimport './style.css';\nimport PropTypes from \"prop-types\";\n\nclass ImageModal extends Component {\n\n    static propTypes = {\n        images: PropTypes.array,\n        prefixCls: PropTypes.string,\n        className: PropTypes.string,\n        // Bottom indicators preview\n        showPreview: PropTypes.bool,\n        // Toolbar index indicator\n        showIndex: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            activeIndex: undefined\n        }\n    }\n\n    open(activeIndex) {\n        this.setState({\n            visible: true,\n            activeIndex: activeIndex || 0\n        });\n    }\n\n    close() {\n        this.setState({\n            visible: false,\n            activeIndex: undefined\n        })\n    }\n\n    render() {\n        const {\n            images,\n            prefixCls,\n            className,\n            showIndex,\n            showPreview\n        } = this.props;\n        const { activeIndex } = this.state;\n\n        return this.state.visible ? (\n            <div className='modal'>\n                <ImageViewer\n                    showPreview={showPreview}\n                    showIndex={showIndex}\n                    prefixCls={prefixCls}\n                    activeIndex={activeIndex}\n                    images={images}/>\n                <div className='close-button'\n                     onClick={this.close.bind(this)}>\n                </div>\n            </div>\n        ) : null;\n    }\n}\n\n\n\nexport default ImageModal;"],"sourceRoot":""}